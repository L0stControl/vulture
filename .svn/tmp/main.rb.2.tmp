#!/usr/bin/env ruby
#
#
#

require 'optparse'
require 'lib/util'
require 'lib/output'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: main.rb -l LANG -d DIR"
  opts.on("-l", "--lang LANG", "Language files") do |l|
    options[:lang] = l
  end
  opts.on("-c", "--check VULN", "Check for ? e.g.: xss [default: all]") do |c|
    options[:check] = c
  end
  opts.on("-d", "--directory DIR", "Directory from the source files") do |d|
    options[:dir] = d
  end
  options[:verbose] = false
  opts.on("-v", "--verbose", "Verbose output") do |v|
    options[:verbose] = v
  end
  opts.on("-o", "--output OUTPUT", "Specify the output file") do |o|
    options[:out] = o
  end
  begin
    opts.parse!
    raise OptionParser::MissingArgument if options[:lang].nil? || options[:dir].nil?
  rescue
    puts opts.help
  end
end

vLang = options[:lang]
vDir  = options[:dir]
vRot  = options[:check]
vOut  = options[:out]

VERBOSE = options[:verbose]

def main(pDir,pLang,pRot)
  vFiles = getFiles(pDir,pLang)
  puts vFiles.inspect
  @vLang = pLang
  if (vFiles.nil?)
      msg = "No files \"#{pLang}\" founds"
      return Msg.new().erro(msg)
  else
    vFiles.each do |file|
      case (pRot)
      when 'xss'
        # Check for XSS vulnerabilities 
        require 'rotscan/xss'
        @patterns = GetPatterns('xss',@vLang)
        checkForXSS(file,@patterns)
      when 'sqli'
        # Check for SQLI vulnerabilities 
        require 'rotscan/sqli'
        @patterns = GetPatterns('sqli',@vLang)
        checkForSqli(file,@patterns)
      when 'rfi'
        # Check for RFI vulnerabilities 
        require 'rotscan/rfi'
        @patterns = GetPatterns('rfi',@vLang)
        checkForRfi(file)
      when nil
        require 'rotscan/xss'
        require 'rotscan/sqli'
        require 'rotscan/rfi'
        @patterns = GetPatterns('rfi',@vLang)
        checkForRfi(file)
        @patterns = GetPatterns('xss',@vLang)
        checkForXSS(file, @patterns)
        @patterns = GetPatterns('sqli',@vLang)
        checkForSqli(file, @patterns)
       else
         return Msg.new().erro("No rotscan found")
      end
    end
  end
end
main(vDir,vLang,vRot)
