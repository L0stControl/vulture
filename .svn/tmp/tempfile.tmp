#!/usr/bin/env ruby
#
#
#
require 'optparse'
require 'lib/util'
require 'lib/output'

parm = {:lang=>nil,:rot=>'all',:dir=>nil,:verbose=>false}
OptionParser.new do |opts|
  opts.version = "0.01"
  opts.on("-l", "--lang", "Language files") do |l| 
    parm[:lang] = ARGV[0]
  end 
  opts.on("-c", "--check", "Check for? e.g.: xss [default: all]") do |r| 
    parm[:rot] = ARGV[0]
  end
  opts.on("-d", "--directory", "Directory from the source files") do |d|
    parm[:dir] = ARGV[0]
  end
  opts.on("-v", "--verbose", "Verbose output") do |v|
    parm[:verbose] = true
  end
  opts.on("-o", "--output", "Specify the output file") do |o|
    options[:out] = o
    parm[:out] = ARGV[0]
  end
  opts.parse!
  Raise OptionParser::MissingArgument, OptionParser::InvalidOption if ((parm[:lang].nil?) or (parm[:dir].nil?))
end

vLang = parm[:lang]
vDir = parm[:dir]
vRot = parm[:rot]
vOut = parm[:out] if (options[:out])

VERBOSE = parm[:verbose]

def main(pDir,pLang,pRot)
  vFiles = getFiles(pDir,pLang)
  if (vFiles.nil?)
      msg = "No files \"#{pLang}\" founds"
      return Msg.new(msg)
  else
    vFiles.each do |file|
      case (pRot)
      when 'xss'
        # Check for XSS vulnerabilities 
        require 'rotscan/xss'
        checkForXSS(file,GetPatterns('xss',pLang))
      when 'sqli'
        # Check for SQLI vulnerabilities 
        require 'rotscan/sqli'
        checkForSqli(file,GetPatterns('sqli',pLang))
      when 'all'
        require 'rotscan/xss'
        require 'rotscan/sqli'
        checkForXSS(file,GetPatterns('xss',pLang))
        checkForSqli(file,GetPatterns('sqli',pLang))
       else
         return Msg.new().erro("No rotscan found")
      end
    end
  end
end

main(vDir,vLang,vRot)

